(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{546:function(e,r,t){"use strict";t.r(r);var a=t(54),n=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"enqueuezero-techshack-2019-15"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enqueuezero-techshack-2019-15"}},[e._v("#")]),e._v(" EnqueueZero Techshack 2019-15")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/antirez/sds",target:"_blank",rel:"noopener noreferrer"}},[e._v("antirez/sds"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Simple Dynamic Strings C library.")]),e._v(" "),t("p",[e._v("Most C string lib design string data structure like below")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("struct yourAverageStringLibrary {\n    char *buf;\n    size_t len;\n    ... possibly more fields here ...\n};\n")])])]),t("p",[e._v("While SDS design the data structure like below")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("+------------+------------------------+-----------+---------------\\\n| Len | Free | H E L L O W O R L D \\n | Null term |  Free space   \\\n+------------+------------------------+-----------+---------------\\\n             |\n             `-> Pointer returned to the user.\n")])])]),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"https://redis.io/topics/internals-sds",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hacking Strings - Redis"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("The Redis string implementation is hidden behind an interface that accepts only character pointers.")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.memorymanagement.org/mmref/begin.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("1. Overview - Memory Management Reference 4.0 documentation"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("A well-designed memory manager can make it easier to write debugging tools, because much of the code can be shared. Such tools could display objects, navigate links, validate objects, or detect abnormal accumulations of certain object types or block sizes.")]),e._v(" "),t("p",[e._v("Typical memory management problems include:")]),e._v(" "),t("ul",[t("li",[e._v("Premature frees and dangling pointers")]),e._v(" "),t("li",[e._v("Memory leak")]),e._v(" "),t("li",[e._v("External fragmentation")]),e._v(" "),t("li",[e._v("Poor locality of reference")]),e._v(" "),t("li",[e._v("Inflexible design")]),e._v(" "),t("li",[e._v("Interface complexity")])]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.erlang-solutions.com/blog/erlang-garbage-collector.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Erlang Garbage Collector | Erlang Solution blog"),t("OutboundLink")],1)]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.ponylang.io/media/papers/orca_gc_and_type_system_co-design_for_actor_languages.pdf",target:"_blank",rel:"noopener noreferrer"}},[t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Orca is a concurrent and parallel garbage collector for actor programs, which does not require any stop-theworld steps, or synchronisation mechanisms, and which has been designed to support zero-copy message passing and sharing of mutable data")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"http://beam-wisdoms.clau.se/en/latest/eli5-atoms.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Atoms ELI5 - BEAM VM Wisdoms"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Atom is a symbol which does not change its value in runtime. BEAM loader routine reads atom values and looks them up in atom table. It replaces atom names with their integer values, tagged as Atom immediate. These internal values cannot leave the node (over the network or on disk) as integers. This is because another node will have different numeric values for atoms. Thus when leaving the node atoms are always converted to strings.")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"http://michaelrbernste.in/2013/06/20/what-is-declarative-programming.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("mrb: What Is Declarative Programming?"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("This post is part of a series exploring a brain-melting epic known as Concepts, Techniques, and Models of Computer Programming.")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"http://maplant.com/gc.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Writing a Simple Garbage Collector in C"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("The hardest part in writing a GC is writing the memory allocator, which is as hard to write as it is to look up the malloc example in K&R.")]),e._v(" "),t("hr"),e._v(" "),t("p",[t("a",{attrs:{href:"https://edgedb.com/blog/edgedb-1-0-alpha-1/",target:"_blank",rel:"noopener noreferrer"}},[e._v("EdgeDB 1.0 Alpha 1"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("EdgeDB Alpha 1 released. Some significant features:")]),e._v(" "),t("ul",[t("li",[e._v("No "),t("code",[e._v("NULL")]),e._v(". Everything is a set. Nothing yields to an empty set. Boolean logic only need to handle true and false.")]),e._v(" "),t("li",[e._v("Enhanced JSON support. "),t("code",[e._v("SELECT <json>Person { full_name, name_len:=len(.fullname) }")])]),e._v(" "),t("li",[e._v("Type safety. "),t("code",[e._v("SELECT <local_datetime>'2019-01-01 01:01:01';")]),e._v(".")]),e._v(" "),t("li",[e._v("Meta Programming using annotations. This enables building type checking, etc.")])]),e._v(" "),t("h3",{attrs:{id:"further-readings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#further-readings"}},[e._v("#")]),e._v(" Further Readings")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://about.sourcegraph.com/go/gophercon-2018-allocator-wrestling",target:"_blank",rel:"noopener noreferrer"}},[e._v("GopherCon 2018 - Allocator Wrestling"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=n.exports}}]);