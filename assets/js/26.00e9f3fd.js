(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{418:function(e,a,n){"use strict";n.r(a);var s=n(54),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,n=e._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"container-and-unshare"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#container-and-unshare"}},[e._v("#")]),e._v(" Container and unshare")]),e._v(" "),n("p",[e._v("Unshare is a utility running program with some namespaces unshared from a parent. We create a new PID namespace below.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[user@julin1 ~]$ sudo unshare --fork --pid --mount-proc sh\n[sudo] password for user: \nsh-4.2# ps aux\nUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\nroot         1  0.0  0.0 115432  1808 pts/0    S    10:25   0:00 sh\nroot         2  0.0  0.0 155324  1848 pts/0    R+   10:25   0:00 ps aux\nsh-4.2# exit\nexit\n")])])]),n("p",[e._v("Let's compare it with Docker. It also creates a new PID namespace.")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("[user@julin1 ~]$ sudo docker run -it --rm busybox sh\n/ # ps aux\nPID   USER     TIME  COMMAND\n    1 root      0:00 sh\n    5 root      0:00 ps aux\n/ # exit\n")])])]),n("p",[e._v("Ignoring other things, we're doing a similar job here, that is to create a new namespace.")]),e._v(" "),n("p",[e._v("Check manpage of "),n("a",{attrs:{href:"https://man7.org/linux/man-pages/man1/unshare.1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("unshare.1"),n("OutboundLink")],1),e._v(".")])])}),[],!1,null,null,null);a.default=t.exports}}]);