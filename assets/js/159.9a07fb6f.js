(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{547:function(e,t,o){"use strict";o.r(t);var n=o(54),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"_2019-11"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2019-11"}},[e._v("#")]),e._v(" 2019-11")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://medium.com/interstellar/understanding-the-stellar-consensus-protocol-423409aad32e",target:"_blank",rel:"noopener noreferrer"}},[e._v("Understanding the Stellar Consensus Protocol"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("The Stellar Consensus Protocol is a “federated Byzantine agreement system” that allows decentralized, leaderless computing networks efficiently to reach a consensus outcome on some decision.")]),e._v(" "),o("p",[o("img",{attrs:{src:"https://cdn-images-1.medium.com/max/1600/1*NqbFmS7qUKfZKmUWFOOKdw.gif",alt:""}})]),e._v(" "),o("hr"),e._v(" "),o("p",[o("a",{attrs:{href:"http://www.craigkerstiens.com/2019/03/13/give-me-back-my-monolith/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Give me back my monolith - Craig Kerstiens"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("Monolithic apps show you a clear stacktrace for errors. On the contrary, microservices makes debugging and understanding more complicated.")]),e._v(" "),o("p",[e._v("The reality we’ve invested decades into development practices and tooling around monoliths that are still maturing. Most of our conversation around SCALING just focuses on scaling the database.")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("a",{attrs:{href:"http://servicedesignpatterns.com/WebServiceImplementationStyles/CommandInvoker",target:"_blank",rel:"noopener noreferrer"}},[e._v("Service Design Patterns - Web Service Implementation Styles - Command Invoker"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("Web services often contain logic that directs how Domain Models and database tables are used to process requests. This logic is frequently duplicated across web services.")]),e._v(" "),o("p",[e._v("Create command objects that fully encapsulate common request processing logic. Instantiate and invoke these commands from within the web service, or forward them to an asynchronous background process.")]),e._v(" "),o("p",[e._v("With the Command Invoker pattern, all domain logic is extracted from the web service and moved to Command objects.")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("a",{attrs:{href:"https://www.potaroo.net/ispcol/2019-03/quic.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("potaroo.net"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("QUIC is one of many transport layer network protocols that attempt to refine the basic operation of IP’s Transmission Control Protocol (TCP).")]),e._v(" "),o("p",[e._v("These days most web pages are not simple monolithic objects. They typically contain many separate components, including images, scripts, customized frames, style sheets and similar. The overheads of setting up both a new TCP session and a new Transport Layer Security (TLS) [4] session for each distinct web object within a compound web resource can become quite significant.")]),e._v(" "),o("p",[e._v("Why not just start afresh and define a new transport protocol that addresses these shortcomings of TCP? The answer is simple: NATs! The solution chosen by QUIC was a UDP-based approach. There is no room left for new transport protocols in today’s network. If what you want to do can’t be achieved within TCP, then all that’s left is UDP.")]),e._v(" "),o("p",[e._v("QUIC is not intended as a replacement for TCP. Indeed, QUIC relies on the continued availability of TCP.0")]),e._v(" "),o("hr"),e._v(" "),o("p",[o("a",{attrs:{href:"https://stressgrid.com/blog/100k_cps_with_elixir/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Achieving 100k connections per second with Elixir"),o("OutboundLink")],1)]),e._v(" "),o("p",[e._v("The article discussed scaling Elixir to handle 100k connections per second.")]),e._v(" "),o("p",[e._v("The combination of multiple connection supervisors in Ranch and multiple listener sockets in the Linux kernel is necessary to achieve full utilization of the 36-core machine under the target workload.")])])}),[],!1,null,null,null);t.default=s.exports}}]);