(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{549:function(e,t,r){"use strict";r.r(t);var n=r(54),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"enqueuezero-techshack-2019-03"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#enqueuezero-techshack-2019-03"}},[e._v("#")]),e._v(" EnqueueZero Techshack 2019-03")]),e._v(" "),r("TechshackHeader"),e._v(" "),r("h2",{attrs:{id:"gcp-incident-19001"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gcp-incident-19001"}},[e._v("#")]),e._v(" GCP Incident 19001")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://status.cloud.google.com/incident/appengine/19001",target:"_blank",rel:"noopener noreferrer"}},[e._v("status.cloud.google.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("To sum up, the issue was the application couldn't be created. The root cause was due to a different configuration in the testing environment and the production environment. It eventually leads to all data written into the metadata store failed.")]),e._v(" "),r("p",[e._v("The solution is to implement additional validation to the metadata storeâ€™s schemas and ensure that test validation of metadata store configuration matches production. Though canary deployment was not mentioned.")]),e._v(" "),r("h2",{attrs:{id:"interpreting-kafka-s-exactly-once-semantics"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#interpreting-kafka-s-exactly-once-semantics"}},[e._v("#")]),e._v(" Interpreting Kafka's Exactly-Once Semantics")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://dzone.com/articles/interpreting-kafkas-exactly-once-semantics",target:"_blank",rel:"noopener noreferrer"}},[e._v("dzone.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("This post introduces the exactly-once delivery semantic in Kafka.")]),e._v(" "),r("p",[e._v("There are three delivery guarantees:")]),e._v(" "),r("ol",[r("li",[e._v("At most once delivery.")]),e._v(" "),r("li",[e._v("At least once delivery.")]),e._v(" "),r("li",[e._v("Exactly once delivery. In particular, it is the most important and difficult.")])]),e._v(" "),r("p",[e._v("Problem 1, the message is being processed and sent to the message queue but never got the acknowledgment. And we don't want to send it multiple times.\nProblem 2, the message is being processed and then the application crashed. Now once we bring back the application, it re-reads the message and hence the message is double processed.")]),e._v(" "),r("p",[e._v("To avoid the two problems, Kafka's solution is by using below techniques.")]),e._v(" "),r("ul",[r("li",[e._v("Idempotent producer. Practically, each message has "),r("code",[e._v("idempotence=true")]),e._v(" and a unique transaction id.")]),e._v(" "),r("li",[e._v("Transactions across partitions. The read-write can be put into a transaction, so it's all-or-nothing.")]),e._v(" "),r("li",[e._v("Set transaction isolation level "),r("code",[e._v("read_commited")]),e._v(".")])]),e._v(" "),r("h2",{attrs:{id:"towards-successful-resilient-software-design"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#towards-successful-resilient-software-design"}},[e._v("#")]),e._v(" Towards Successful Resilient Software Design")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.infoq.com/articles/towards-resilient-software-design",target:"_blank",rel:"noopener noreferrer"}},[e._v("infoq.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Today's distributed system needs to be resilient. Resilient, in short, is a way that ideally a user does not notice at all if an unexpected failure occurs or that the user at least can continue to use the degraded application.")]),e._v(" "),r("p",[e._v("The challenges of resilient software design include:")]),e._v(" "),r("ul",[r("li",[e._v("Understanding the business case.")]),e._v(" "),r("li",[e._v("Understanding the distributed system is non-deterministic.")]),e._v(" "),r("li",[e._v("Impossible to reach 100% available. Even if you try to make it, it costs you.")]),e._v(" "),r("li",[e._v("Establishing the Ops-Dev feedback loop.")]),e._v(" "),r("li",[e._v("Getting the service dependency and functional design right.")]),e._v(" "),r("li",[e._v("Understanding patterns.")]),e._v(" "),r("li",[e._v("Keeping up the new technology.")])]),e._v(" "),r("h2",{attrs:{id:"designing-resilient-systems-circuit-breakers-or-retries"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#designing-resilient-systems-circuit-breakers-or-retries"}},[e._v("#")]),e._v(" Designing resilient systems: Circuit Breakers or Retries?")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://engineering.grab.com/designing-resilient-systems-part-1",target:"_blank",rel:"noopener noreferrer"}},[e._v("part 1"),r("OutboundLink")],1),e._v(" | "),r("a",{attrs:{href:"https://engineering.grab.com/designing-resilient-systems-part-2",target:"_blank",rel:"noopener noreferrer"}},[e._v("part 2"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("The two posts include circuit breaker, retry, jitter, back-off, etc.")]),e._v(" "),r("p",[e._v("Short conclusions:")]),e._v(" "),r("ul",[r("li",[e._v("Per-host circuit breaker will hide problem when one of the instances of service is having a problem.")]),e._v(" "),r("li",[e._v("Only using retry will cause a cascading failure.")]),e._v(" "),r("li",[e._v("Circuit Breaker (per service) is better than Retry, and the Retry is better than Circuit Breaker (per host).")]),e._v(" "),r("li",[e._v("Use circuit breaker with retry together. If we were to retry the 10% of requests that failed once, 90% of those requests would pass on the second attempt. Our success rate would then go from the original 90% to 90% + ( 90% x 10%) = 99%")])]),e._v(" "),r("h2",{attrs:{id:"production-guideline"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#production-guideline"}},[e._v("#")]),e._v(" Production Guideline")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://medium.com/@rakyll/production-guideline-9d5d10c8f1e",target:"_blank",rel:"noopener noreferrer"}},[e._v("medium.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("This post includes a bunch of useful tips for production services.")]),e._v(" "),r("ul",[r("li",[e._v("Builds should not depend on the external system.")]),e._v(" "),r("li",[e._v("Document SLOs at the design stage. Document how releases affect SLOs.")]),e._v(" "),r("li",[e._v("Document the availability expect of external services.")]),e._v(" "),r("li",[e._v("Avoid SPOF by either replicating resources of using the hardcoded fallback.")]),e._v(" "),r("li",[e._v("Non-secret config can be command-line flags.")]),e._v(" "),r("li",[e._v("Be able to fallback if the system depends on a configuration system.")]),e._v(" "),r("li",[e._v("Don't inherit dev config from prod config.")]),e._v(" "),r("li",[e._v("Document the entire release process, including canary release.")]),e._v(" "),r("li",[e._v("Automatically revert canaries if possible.")]),e._v(" "),r("li",[e._v("Ensure rollbacks can use the same process that rollouts use.")]),e._v(" "),r("li",[e._v("Collect metrics.")]),e._v(" "),r("li",[e._v("Differentiate client-side and server-side data.")]),e._v(" "),r("li",[e._v("Tune alerts to reduce toil.")]),e._v(" "),r("li",[e._v("Propagate the trace context.")]),e._v(" "),r("li",[e._v("Encrypt all requests.")]),e._v(" "),r("li",[e._v("Use VPN, IAM, ACL, audit, ...")]),e._v(" "),r("li",[e._v("Sanitize user input.")]),e._v(" "),r("li",[e._v("Avoid external endpoints that trigger a large number of internal fan-outs.")]),e._v(" "),r("li",[e._v("Document how the service scales, how many resources it needs, the quota and resource constraints.")]),e._v(" "),r("li",[e._v("Load test.")])]),e._v(" "),r("h2",{attrs:{id:"composing-programs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#composing-programs"}},[e._v("#")]),e._v(" Composing Programs")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://composingprograms.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("composingprograms.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("This is a free online introduction to programming and computer science. It's based on book SICP and refurbished with Python 3.")]),e._v(" "),r("ul",[r("li",[e._v("Elements of Programming: expressions, combinations, and abstraction!")]),e._v(" "),r("li",[e._v("The techniques of building abstractions with functions are calling functions, composing higher-order functions, and recursive functions.")]),e._v(" "),r("li",[e._v("The techniques of building abstractions with data are using the list, OO models, stream, etc.")]),e._v(" "),r("li",[e._v("When we say programming, we actually write yet another language. The third chapter explains how to implement an interpreter language.")]),e._v(" "),r("li",[e._v("Programming paradigms:\n"),r("ul",[r("li",[e._v("Implicit sequences. It's using a stream data structure in the basic.")]),e._v(" "),r("li",[e._v("Logic Programming. It's using fact and logical queries as the building block.")]),e._v(" "),r("li",[e._v("Distributed Computing. The message becomes the fundamental element between peers in a Client-Server architecture.")]),e._v(" "),r("li",[e._v("Distributed Data Processing. It means a map-reduce pattern, dividing and then conquering.")]),e._v(" "),r("li",[e._v("Parallel Computing. It's about threading, multiprocessing, locking share states.")])])])]),e._v(" "),r("h2",{attrs:{id:"why-is-storage-on-kubernetes-so-hard"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#why-is-storage-on-kubernetes-so-hard"}},[e._v("#")]),e._v(" Why Is Storage On Kubernetes So Hard?")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://softwareengineeringdaily.com/2019/01/11/why-is-storage-on-kubernetes-is-so-hard/",target:"_blank",rel:"noopener noreferrer"}},[e._v("softwareengineeringdaily.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Kubernetes is good because it provides a dynamic architecture for managing containers.\nHowever, a persistent storage solution cannot afford this dynamic behavior.\nWe cannot dynamically create and destroy persistent storage, because the DATA is in it.")]),e._v(" "),r("p",[e._v("In production developers usually, rely on external storage. And Kubernetes offers Volume Plugins.\nPreviously, volume plugins are handcrafted into Kubernetes core codebase, which was inflexible.\nWith the introduction of CSI and Flexvolume, volume plugins can be deployed on a cluster without the changes to the codebase.")]),e._v(" "),r("p",[e._v("Now we can use PV, PVC, StatefulSet, and StorageClass managing volumes provided by external vendors.\nIf you prefer a cloud-native OSS solution, try Ceph and Rook.")]),e._v(" "),r("h2",{attrs:{id:"open-sourcing-our-kubernetes-tools"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#open-sourcing-our-kubernetes-tools"}},[e._v("#")]),e._v(" Open Sourcing our Kubernetes Tools")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://engineering.tumblr.com/post/182013497734/open-sourcing-our-kubernetes-tools",target:"_blank",rel:"noopener noreferrer"}},[e._v("engineering.tumblr.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Tumblr engineering team open sourced several of their Kubernetes tools.")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/tumblr/k8s-sidecar-injector",target:"_blank",rel:"noopener noreferrer"}},[e._v("k8s-sidecar-injector"),r("OutboundLink")],1),e._v(". It helps to inject a logger container into your pod by defining a ConfigMap.")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/tumblr/k8s-config-projector",target:"_blank",rel:"noopener noreferrer"}},[e._v("k8s-config-injector"),r("OutboundLink")],1),e._v(". It's meant to be run by CI. It pulls code and data in the configuration repo and populates into ConfigMap.")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/tumblr/k8s-secret-projector",target:"_blank",rel:"noopener noreferrer"}},[e._v("k8s-secret-injector"),r("OutboundLink")],1),e._v(", Similarly, this tool inject credential information into Secret.")])]),e._v(" "),r("h2",{attrs:{id:"kubernetes-security-best-practices"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-security-best-practices"}},[e._v("#")]),e._v(" Kubernetes Security Best Practices")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.cncf.io/blog/2019/01/14/9-kubernetes-security-best-practices-everyone-must-follow/",target:"_blank",rel:"noopener noreferrer"}},[e._v("cncf.io"),r("OutboundLink")],1)]),e._v(" "),r("ul",[r("li",[e._v("Upgrade to the Latest Version")]),e._v(" "),r("li",[e._v("Enable Role-Based Access Control (RBAC)")]),e._v(" "),r("li",[e._v("Use Namespaces to Establish Security Boundaries")]),e._v(" "),r("li",[e._v("Separate Sensitive Workloads")]),e._v(" "),r("li",[e._v("Secure Cloud Metadata Access")]),e._v(" "),r("li",[e._v("Create and Define Cluster Network Policies")]),e._v(" "),r("li",[e._v("Run a Cluster-wide Pod Security Policy")]),e._v(" "),r("li",[e._v("Harden Node Security\n"),r("ul",[r("li",[e._v("Ensure the host is secure and configured correctly.")]),e._v(" "),r("li",[e._v("Control network access to sensitive ports.")]),e._v(" "),r("li",[e._v("Minimize administrative access to Kubernetes nodes.")])])]),e._v(" "),r("li",[e._v("Turn on Audit Logging")])]),e._v(" "),r("h2",{attrs:{id:"automating-datacenter-operations-at-dropbox"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#automating-datacenter-operations-at-dropbox"}},[e._v("#")]),e._v(" Automating Datacenter Operations at Dropbox")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://blogs.dropbox.com/tech/2019/01/automating-datacenter-operations-at-dropbox/",target:"_blank",rel:"noopener noreferrer"}},[e._v("blogs.dropbox.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Dropbox engineers invented Pirlo system to automate their work in Data Center Operations.")]),e._v(" "),r("p",[e._v("At a high level, Pirlo consists of a distributed MySQL-backed job queue built in-house using many of the primitives available in Dropbox production such as gRPC, service discovery, and our managed MySQL clusters.")]),e._v(" "),r("mermaid",[e._v("\ngraph LR\n    table[Table `job`]\n    lib[SQLAlchemy]\n    qmgr[QueueManager]\n    pool1(Worker Pool)\n    pool2(Worker Pool)\n    pool3(Worker Pool)\n    table --- lib;\n    lib --- qmgr;\n    qmgr --- pool1;\n    qmgr --- pool2;\n    qmgr --- pool3;\n")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("job")]),e._v(" is a table in the MySQL database.")]),e._v(" "),r("li",[e._v("SQLAlchemy is the SQL library for manipulating job data.")]),e._v(" "),r("li",[r("code",[e._v("QueueManager")]),e._v(" encapsulates the SQLAlchemy and managing logic into threads.")]),e._v(" "),r("li",[e._v("Workers run in different threads and consume jobs.")])]),e._v(" "),r("p",[e._v("Pirlo Server Validation is another Pirlo component for handling server provisioning and repair validation.\nSimilarly, TOR Starter is the Pirlo component for handling switch provisioning. It validates and configures switches in the racks.\nThese components inherit the same process of using the SQLAlchemy lib and job table, excepting adding some more fields to their own needs.")]),e._v(" "),r("mermaid",[e._v("\ngraph TB\n    lib[SQLAlchemy Library];\n    qmgr[QueueManager];\n    lib --inherit--\x3e torlib;\n    lib --inherit--\x3e serverlib;\n    qmgr --inherit--\x3e torqmgr;\n    qmgr --inherit--\x3e serverqmgr;\n    pool --inherit--\x3e torpool;\n    pool --inherit--\x3e serverpool;\n    lib --\x3e qmgr;\n    qmgr --\x3e pool;\n    subgraph tor\n        torlib --\x3e torqmgr;\n        torqmgr --\x3e torpool;\n    end\n    subgraph server\n        serverlib --\x3e serverqmgr;\n        serverqmgr --\x3e serverpool;\n    end\n")]),e._v(" "),r("h2",{attrs:{id:"on-infrastructure-at-scale-a-cascading-failure-of-distributed-systems"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#on-infrastructure-at-scale-a-cascading-failure-of-distributed-systems"}},[e._v("#")]),e._v(" On Infrastructure at Scale: A Cascading Failure of Distributed Systems")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://medium.com/@daniel.p.woods/on-infrastructure-at-scale-a-cascading-failure-of-distributed-systems-7cff2a3cd2df",target:"_blank",rel:"noopener noreferrer"}},[e._v("medium.com"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("Key takeaways are:")]),e._v(" "),r("ul",[r("li",[e._v("Smaller clusters, more of them.")]),e._v(" "),r("li",[e._v("Shared Docker daemon is a brittle failure point.")]),e._v(" "),r("li",[e._v("Having each workload ship with their own logging and metric sidecars is the right thing")])])],1)}),[],!1,null,null,null);t.default=i.exports}}]);