(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{534:function(e,r,t){"use strict";t.r(r);var n=t(54),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"enqueuezero-techshack-2019-04"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#enqueuezero-techshack-2019-04"}},[e._v("#")]),e._v(" EnqueueZero Techshack 2019-04")]),e._v(" "),t("p",[e._v("大家好，这是 EnqueueZero Techshack 第 2019-04 期。以下内容存档于 "),t("a",{attrs:{href:"https://enqueuezero.com/techshack.weekly/2019-04-CN.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("2019-04 CN"),t("OutboundLink")],1),e._v("; 其英文版笔记存档于"),t("a",{attrs:{href:"https://enqueuezero.com/techshack.weekly/2019-04.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("2019-04"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("Google Cloud 博客更新了一篇关于 Canary Analysis 的文章，讲述了如何做金丝雀部署的分析。首先，你要搭好 Monitoring System，然后构建好 SLOs。其次，做 Canary 部署需要基于 baseline，准备足够的时间等等。 "),t("a",{attrs:{href:"https://cloud.google.com/blog/products/devops-sre/canary-analysis-lessons-learned-and-best-practices-from-google-and-waze",target:"_blank",rel:"noopener noreferrer"}},[e._v("cloud.google.com"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("p",[e._v("The Night of A Cascading Failure 讲述了一个字符串切分出错如何导致整个系统崩溃，工作几乎所有工程师被 OnCall 的诡异故事，非常值得一读。"),t("a",{attrs:{href:"https://rachelbythebay.com/w/2019/01/20/quiet/",target:"_blank",rel:"noopener noreferrer"}},[e._v("rachelbythebay.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Scaling Engineering Teams via Writing Things Down and Sharing - aka RFCs 介绍了一种做工程项目的流程 - 先从写文档开始，把文档送到全公司所有同事那里去。 "),t("a",{attrs:{href:"https://blog.pragmaticengineer.com/scaling-engineering-teams-via-writing-things-down-rfcs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("blog.pragmaticengineer"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("HTTP/3 explained 介绍了 HTTP/3 是什么，它的本质是 HTTP-over-QUIC, 它相较之前的 HTTP 协议，核心解决的问题是 Head-on-Line，更少的握手，加密。 "),t("a",{attrs:{href:"https://http3-explained.haxx.se/en/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http3-explained.haxx.se"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Functional Programming Fundamentals 介绍了函数式编程的特性。 "),t("a",{attrs:{href:"https://www.matthewgerstman.com/functional-programming-fundamentals/",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.matthewgerstman.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("The Elements of UI Engineering 抛出了很多 UI 工程领域的问题。作者的文章是开放性的，没有对这些问题提出解决方案，相反地，他鼓励对这些问题应用到任何一个程序中，看下某个组件对这些问题的答案都是什么。 "),t("a",{attrs:{href:"https://overreacted.io/the-elements-of-ui-engineering/",target:"_blank",rel:"noopener noreferrer"}},[e._v("overreacted.io"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Looking Back at Postgres 是一篇 arxiv 的论文，回顾了这些年 Postgres 的发展。最后的结论是：程序要可扩展，one size fits many。 "),t("a",{attrs:{href:"https://arxiv.org/pdf/1901.01973.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("arxiv.org"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Serverless computing: One step forward, two steps back 评判性地阅读了一篇论文，认为现在市场上的 serverless 解决方案做做 prototype 还是没问题的，它有很多潜在的性能问题。 "),t("a",{attrs:{href:"http://muratbuffalo.blogspot.com/2019/01/paper-review-serverless-computing-one.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("muratbuffalo.blogspot.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Keeping CALM: When Distributed Consistency is Easy 是另外一篇关于分布式一致性论文，"),t("a",{attrs:{href:"https://arxiv.org/abs/1901.01930",target:"_blank",rel:"noopener noreferrer"}},[e._v("arxiv.org"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Would you still pick Elixir in 2019 探讨了使用 Elixir 这么编程语言的优缺点。 "),t("a",{attrs:{href:"https://github.com/dwyl/learn-elixir/issues/102",target:"_blank",rel:"noopener noreferrer"}},[e._v("github.com"),t("OutboundLink")],1),e._v(" | "),t("a",{attrs:{href:"https://news.ycombinator.com/item?id=18838115",target:"_blank",rel:"noopener noreferrer"}},[e._v("news.ycombinator.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Resiliency: Rate Limiting, Retries, Bulkheads 是三篇关于提高 Resiliency 的文章： "),t("a",{attrs:{href:"https://medium.com/dm03514-tech-blog/sre-resiliency-bolt-on-sidecar-rate-limiting-with-envoy-sidecar-5381bd4a1137",target:"_blank",rel:"noopener noreferrer"}},[e._v("medium.com"),t("OutboundLink")],1),e._v(" (rate limiting) | "),t("a",{attrs:{href:"https://medium.com/dm03514-tech-blog/sre-resiliency-retries-in-action-using-js-8e4b7e7d4526",target:"_blank",rel:"noopener noreferrer"}},[e._v("medium.com retries"),t("OutboundLink")],1),e._v(" (retries) | "),t("a",{attrs:{href:"https://medium.com/dm03514-tech-blog/sre-resiliency-bulkheads-in-action-using-js-453c02a940c0",target:"_blank",rel:"noopener noreferrer"}},[e._v("medium.com"),t("OutboundLink")],1),e._v(" (Bulkheads)")]),e._v(" "),t("p",[e._v("What Are The Best Software Engineering Principles 集合了 10 个常见的编程的原则。 "),t("a",{attrs:{href:"https://dev.to/luminousmen/what-are-the-best-software-engineering-principles--3p8n",target:"_blank",rel:"noopener noreferrer"}},[e._v("dev.to"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("The Internals of PostgreSQL, for database administrators and system developers 是一本关于 pgsql 管理和运维的书。 "),t("a",{attrs:{href:"http://www.interdb.jp/pg/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("www.interdb.jp"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("MySQL High Availability Framework Explained – Part II 探讨了 MySQL semisynchronous replication 细节和配置。 semisynchronous replication 指的是 Master 在客户端至少给出一个确认信号后就提交事务到存储引擎。"),t("a",{attrs:{href:"http://highscalability.com/blog/2019/1/8/mysql-high-availability-framework-explained-part-ii.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("highscalability.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Learn Enough Docker to be Useful - Part I 介绍了 Docker 的一些概念。 "),t("a",{attrs:{href:"https://towardsdatascience.com/learn-enough-docker-to-be-useful-b7ba70caeb4b",target:"_blank",rel:"noopener noreferrer"}},[e._v("towardsdatascience.com"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Operable Software 是本期非常有意思的一篇文章，作者对于如何写出可运维的软件思考地非常深入。 "),t("a",{attrs:{href:"https://ferd.ca/operable-software.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ferd.ca"),t("OutboundLink")],1)]),e._v(" "),t("hr"),e._v(" "),t("SubscribeCNList"),e._v(" "),t("TechshackHeader")],1)}),[],!1,null,null,null);r.default=a.exports}}]);