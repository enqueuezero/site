(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{436:function(e,t,s){"use strict";s.r(t);var a=s(54),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"reliability"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reliability"}},[e._v("#")]),e._v(" Reliability")]),e._v(" "),s("h2",{attrs:{id:"context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[e._v("#")]),e._v(" Context")]),e._v(" "),s("p",[e._v("Users expect the service providing reliable functions. In general, it means:")]),e._v(" "),s("ul",[s("li",[e._v("The service behaves as designed or as it always is.")]),e._v(" "),s("li",[e._v("Submitting wrong data won't make the application crash.")]),e._v(" "),s("li",[e._v("The service works well under normal loads.")]),e._v(" "),s("li",[e._v("The service responds users' requests quickly.")])]),e._v(" "),s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),s("p",[e._v("Reliability defines if the system continuous to work correctly.")]),e._v(" "),s("p",[e._v("The "),s("RouterLink",{attrs:{to:"/availability.html"}},[e._v("availability")]),e._v(" concerns the uptime and latency, while reliability concerns the correctness and integrity of the system behaviors.")],1),e._v(" "),s("p",[e._v("To provide a reliable service, the system should be fault-tolerant, or resilient.")]),e._v(" "),s("h2",{attrs:{id:"patterns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patterns"}},[e._v("#")]),e._v(" Patterns")]),e._v(" "),s("h3",{attrs:{id:"fault"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fault"}},[e._v("#")]),e._v(" Fault")]),e._v(" "),s("p",[e._v("Fault is when the system goes wrong. The fault-tolerant, or resilient, means a system can cope with these faults in certain cases.")]),e._v(" "),s("p",[e._v('Here, we highlight "in certain cases" because even the most resilient system can\'t defend itself from any faults. For example, if a big earthquake causes the entire Internet broken, how does the service suppose to work as expected? Usually we define below cases as faults:')]),e._v(" "),s("ul",[s("li",[e._v("Hardware faults. The server host is malfunctioning, possibly due to memory blips, disk failure, high/low temperature, loss of power, wire not connected, etc.")]),e._v(" "),s("li",[e._v("Cluster faults. The data center is in outage, possibly due to thunder strikes, too many snows on roof, regional grid outage, etc.")]),e._v(" "),s("li",[e._v("OS faults. The server is hanging, possibly due to 100% CPU occupied, out of memory, etc.")]),e._v(" "),s("li",[e._v("Application faults. The service is hanging, possibly due to a dead loop, unexpected high loads, etc.")]),e._v(" "),s("li",[e._v("Human Errors. Human makes errors often, and in fact, makes more faults than others.")])]),e._v(" "),s("h3",{attrs:{id:"failure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#failure"}},[e._v("#")]),e._v(" Failure")]),e._v(" "),s("p",[s("RouterLink",{attrs:{to:"/"}},[e._v("Please donate this project. It takes time and efforts writing these articles.")])],1),e._v(" "),s("h2",{attrs:{id:"conclusions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conclusions"}},[e._v("#")]),e._v(" Conclusions")]),e._v(" "),s("p",[e._v("Providing a reliable service requires not to just do everything that keeps system available, but also introducing more thorough validations and reviews. A lot of engineering practises makes the service more reliable, for example, code review, continuous integration, security review, health checking, alerting, etc. By leveraging the monitoring & alerting system, we can reduce the time that system is deviated from spec. If necessary, degrade the surrounding features and let the service process only critical business logics.")])])}),[],!1,null,null,null);t.default=i.exports}}]);